[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:157 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:161 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.17:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.17:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.17:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'testing.postgresql-k8s-0': 160, 'testing.postgresql-k8s-1': 161, 'testing.postgresql-k8s-2': 163}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.17:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.17:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.17:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'testing.postgresql-k8s-0': 302, 'testing.postgresql-k8s-1': 303, 'testing.postgresql-k8s-2': 304}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:164 Get leader unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:170 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:182 Inject dependency fault
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:187 Refresh the charm
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:190 Get first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:194 Wait for upgrade to fail on first upgrading unit
[32mINFO    [0m pytest_operator.plugin:plugin.py:937 Model status:

Model    Controller          Cloud/Region        Version  SLA          Timestamp
testing  concierge-microk8s  microk8s/localhost  3.6.5    unsupported  01:56:36Z

App                  Version  Status  Scale  Charm                Channel      Rev  Address         Exposed  Message
postgresql-k8s       14.17    active      3  postgresql-k8s                      1  10.152.183.216  no       
postgresql-test-app           active      1  postgresql-test-app  latest/edge  383  10.152.183.131  no       received database credentials of the first database

Unit                    Workload  Agent  Address      Ports  Message
postgresql-k8s/0*       active    idle   10.1.30.148         Primary
postgresql-k8s/1        active    idle   10.1.30.147         
postgresql-k8s/2        active    idle   10.1.30.146         
postgresql-test-app/0*  active    idle   10.1.30.136         received database credentials of the first database

[32mINFO    [0m pytest_operator.plugin:plugin.py:943 Juju error logs:

unit-postgresql-k8s-2: 01:32:10 ERROR unit.postgresql-k8s/2.juju-log pgdata folder not found in /var/lib/postgresql/data/pgdata
unit-postgresql-k8s-0: 01:46:18 ERROR unit.postgresql-k8s/0.juju-log charms.data_platform_libs.v0.upgrade.ClusterNotReadyError - {'message': '', 'cause': 'try to switchover manually to postgresql-k8s/0', 'resolution': ''}
unit-postgresql-k8s-0: 01:47:29 ERROR unit.postgresql-k8s/0.juju-log Cluster upgrade failed, ensure pre-upgrade checks are ran first.

[32mINFO    [0m pytest_operator.plugin:plugin.py:1025 Forgetting model main...