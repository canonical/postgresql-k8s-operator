{"uid":"4b4757e66a1912dae1a509f688f20b0f","name":"categories","children":[{"name":"Product defects","children":[{"name":"AssertionError: Partition not set to 2\nassert 0 == 2\n +  where 0 = RollingUpdateStatefulSetStrategy(maxUnavailable=None, partition=0).partition\n +    where RollingUpdateStatefulSetStrategy(maxUnavailable=None, partition=0) = StatefulSetUpdateStrategy(rollingUpdate=RollingUpdateStatefulSetStrategy(maxUnavailable=None, partition=0), type='RollingUpdate').rollingUpdate\n +      where StatefulSetUpdateStrategy(rollingUpdate=RollingUpdateStatefulSetStrategy(maxUnavailable=None, partition=0), type='RollingUpdate') = StatefulSetSpec(selector=LabelSelector(matchExpressions=None, matchLabels={'app.kubernetes.io/name': 'postgresql-k8s'}), serviceName='postgresql-k8s-endpoints', template=PodTemplateSpec(metadata=ObjectMeta(annotations={'controller.juju.is/id': '5ad44662-ff29-467b-896b-aaae914c27ef', 'juju.is/version': '3.6.2', 'model.juju.is/id': '77c9cadb-7ac8-4869-80d6-a73333fb598e'}, creationTimestamp=None, deletionGracePeriodSeconds=None, deletionTimestamp=None, finalizers=None, generateName=None, generation=None, labels={'app.kubernetes.io/name': 'postgresql-k8s'}, managedFields=None, name=None, namespace=None, ownerReferences=None, resourceVersion=None, selfLink=None, uid=None), spec=PodSpec(containers=[Container(name='charm', args=['run', '--http', ':38812', '--verbose'], command=['/charm/bin/pebble'], env=[EnvVar(name='JUJU_CONTAINER_NAMES', value='postgresql', valueFrom=None), EnvVar(name='HTTP_PROBE_PORT', value='3856', valueFrom=None)], envFrom=None, image='docker.io/jujusolutions/charm-base:ubuntu-22.04', imagePullPolicy='IfNotPresent', lifecycle=None, livenessProbe=Probe(exec=None, failureThreshold=3, grpc=None, httpGet=HTTPGetAction(port=38812, host=None, httpHeaders=None, path='/v1...s=[PersistentVolumeClaim(apiVersion='v1', kind='PersistentVolumeClaim', metadata=ObjectMeta(annotations={'controller.juju.is/id': '5ad44662-ff29-467b-896b-aaae914c27ef', 'juju-storage-owner': 'postgresql-k8s', 'model.juju.is/id': '77c9cadb-7ac8-4869-80d6-a73333fb598e', 'storage.juju.is/name': 'pgdata'}, creationTimestamp=None, deletionGracePeriodSeconds=None, deletionTimestamp=None, finalizers=None, generateName=None, generation=None, labels={'app.kubernetes.io/managed-by': 'juju', 'storage.juju.is/name': 'pgdata'}, managedFields=None, name='postgresql-k8s-pgdata-04595d6f', namespace=None, ownerReferences=None, resourceVersion=None, selfLink=None, uid=None), spec=PersistentVolumeClaimSpec(accessModes=['ReadWriteOnce'], dataSource=None, dataSourceRef=None, resources=VolumeResourceRequirements(limits=None, requests={'storage': '1Gi'}), selector=None, storageClassName='microk8s-hostpath', volumeAttributesClassName=None, volumeMode='Filesystem', volumeName=None), status=PersistentVolumeClaimStatus(accessModes=None, allocatedResourceStatuses=None, allocatedResources=None, capacity=None, conditions=None, currentVolumeAttributesClassName=None, modifyVolumeStatus=None, phase='Pending'))]).updateStrategy\n +        where StatefulSetSpec(selector=LabelSelector(matchExpressions=None, matchLabels={'app.kubernetes.io/name': 'postgresql-k8s'}), serviceName='postgresql-k8s-endpoints', template=PodTemplateSpec(metadata=ObjectMeta(annotations={'controller.juju.is/id': '5ad44662-ff29-467b-896b-aaae914c27ef', 'juju.is/version': '3.6.2', 'model.juju.is/id': '77c9cadb-7ac8-4869-80d6-a73333fb598e'}, creationTimestamp=None, deletionGracePeriodSeconds=None, deletionTimestamp=None, finalizers=None, generateName=None, generation=None, labels={'app.kubernetes.io/name': 'postgresql-k8s'}, managedFields=None, name=None, namespace=None, ownerReferences=None, resourceVersion=None, selfLink=None, uid=None), spec=PodSpec(containers=[Container(name='charm', args=['run', '--http', ':38812', '--verbose'], command=['/charm/bin/pebble'], env=[EnvVar(name='JUJU_CONTAINER_NAMES', value='postgresql', valueFrom=None), EnvVar(name='HTTP_PROBE_PORT', value='3856', valueFrom=None)], envFrom=None, image='docker.io/jujusolutions/charm-base:ubuntu-22.04', imagePullPolicy='IfNotPresent', lifecycle=None, livenessProbe=Probe(exec=None, failureThreshold=3, grpc=None, httpGet=HTTPGetAction(port=38812, host=None, httpHeaders=None, path='/v1...s=[PersistentVolumeClaim(apiVersion='v1', kind='PersistentVolumeClaim', metadata=ObjectMeta(annotations={'controller.juju.is/id': '5ad44662-ff29-467b-896b-aaae914c27ef', 'juju-storage-owner': 'postgresql-k8s', 'model.juju.is/id': '77c9cadb-7ac8-4869-80d6-a73333fb598e', 'storage.juju.is/name': 'pgdata'}, creationTimestamp=None, deletionGracePeriodSeconds=None, deletionTimestamp=None, finalizers=None, generateName=None, generation=None, labels={'app.kubernetes.io/managed-by': 'juju', 'storage.juju.is/name': 'pgdata'}, managedFields=None, name='postgresql-k8s-pgdata-04595d6f', namespace=None, ownerReferences=None, resourceVersion=None, selfLink=None, uid=None), spec=PersistentVolumeClaimSpec(accessModes=['ReadWriteOnce'], dataSource=None, dataSourceRef=None, resources=VolumeResourceRequirements(limits=None, requests={'storage': '1Gi'}), selector=None, storageClassName='microk8s-hostpath', volumeAttributesClassName=None, volumeMode='Filesystem', volumeName=None), status=PersistentVolumeClaimStatus(accessModes=None, allocatedResourceStatuses=None, allocatedResources=None, capacity=None, conditions=None, currentVolumeAttributesClassName=None, modifyVolumeStatus=None, phase='Pending'))]) = StatefulSet(apiVersion='apps/v1', kind='StatefulSet', metadata=ObjectMeta(annotations={'app.juju.is/uuid': '04595d6f', 'controller.juju.is/id': '5ad44662-ff29-467b-896b-aaae914c27ef', 'juju.is/version': '3.6.2', 'model.juju.is/id': '77c9cadb-7ac8-4869-80d6-a73333fb598e'}, creationTimestamp=datetime.datetime(2025, 2, 18, 1, 32, 56, tzinfo=datetime.timezone.utc), deletionGracePeriodSeconds=None, deletionTimestamp=None, finalizers=None, generateName=None, generation=1, labels={'app.kubernetes.io/managed-by': 'juju', 'app.kubernetes.io/name': 'postgresql-k8s'}, managedFields=[ManagedFieldsEntry(apiVersion='apps/v1', fieldsType='FieldsV1', fieldsV1={'f:metadata': {'f:annotations': {'.': {}, 'f:app.juju.is/uuid': {}, 'f:controller.juju.is/id': {}, 'f:juju.is/version': {}, 'f:model.juju.is/id': {}}, 'f:labels': {'.': {}, 'f:app.kubernetes.io/managed-by': {}, 'f:app.kubernetes.io/name': {}}}, 'f:spec': {'f:persistentVolumeClaimRetentionPolicy': {'.': {}, 'f:whenDeleted': {}, 'f:whenScaled': {}}, 'f:podManagementPolicy': {}, 'f:replicas': {}, 'f:revisionHistoryLimit': {}, 'f:selector': {}, 'f:serviceName': {}, 'f:template': {'f:metadata': {'f:annotations': {'.': {}, 'f:controller.juju.is/...fb598e', 'storage.juju.is/name': 'pgdata'}, creationTimestamp=None, deletionGracePeriodSeconds=None, deletionTimestamp=None, finalizers=None, generateName=None, generation=None, labels={'app.kubernetes.io/managed-by': 'juju', 'storage.juju.is/name': 'pgdata'}, managedFields=None, name='postgresql-k8s-pgdata-04595d6f', namespace=None, ownerReferences=None, resourceVersion=None, selfLink=None, uid=None), spec=PersistentVolumeClaimSpec(accessModes=['ReadWriteOnce'], dataSource=None, dataSourceRef=None, resources=VolumeResourceRequirements(limits=None, requests={'storage': '1Gi'}), selector=None, storageClassName='microk8s-hostpath', volumeAttributesClassName=None, volumeMode='Filesystem', volumeName=None), status=PersistentVolumeClaimStatus(accessModes=None, allocatedResourceStatuses=None, allocatedResources=None, capacity=None, conditions=None, currentVolumeAttributesClassName=None, modifyVolumeStatus=None, phase='Pending'))]), status=StatefulSetStatus(replicas=3, availableReplicas=3, collisionCount=0, conditions=None, currentReplicas=3, currentRevision='postgresql-k8s-79d659b6fc', observedGeneration=1, readyReplicas=3, updateRevision='postgresql-k8s-79d659b6fc', updatedReplicas=3)).spec","children":[{"name":"test_pre_upgrade_check","uid":"6a6c70b9f5e1367f","parentUid":"b8d8d4b10221b62a360d4bb8c5330ec3","status":"failed","time":{"start":1739842677837,"stop":1739842702187,"duration":24350},"flaky":false,"newFailed":true,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":true,"parameters":[],"tags":["asyncio","abort_on_fail","@pytest.mark.skipif(False, reason='Requires amd64 architecture')"]}],"uid":"b8d8d4b10221b62a360d4bb8c5330ec3"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"},{"name":"Test defects","children":[{"name":"juju.errors.JujuUnitError: Unit in error: postgresql-k8s2/0","children":[{"name":"test_app_resources_conflicts","uid":"2c945cc6fdc27e88","parentUid":"d272008fce03d9b6a32f7539e67b5371","status":"broken","time":{"start":1739842704872,"stop":1739842756302,"duration":51430},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":true,"parameters":[],"tags":["asyncio","abort_on_fail","@pytest.mark.skipif(False, reason='Requires amd64 architecture')"]}],"uid":"d272008fce03d9b6a32f7539e67b5371"},{"name":"tenacity.RetryError: RetryError[<Future at 0x7fc8ff55de20 state=finished raised AssertionError>]","children":[{"name":"test_restore_on_new_cluster","uid":"bba84a5af8760b5d","parentUid":"52e35138e947b1c3706288e002859f04","status":"broken","time":{"start":1739843429310,"stop":1739843845633,"duration":416323},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":true,"retriesCount":1,"retriesStatusChange":true,"parameters":[],"tags":["asyncio"]}],"uid":"52e35138e947b1c3706288e002859f04"}],"uid":"bdbf199525818fae7a8651db9eafe741"}]}