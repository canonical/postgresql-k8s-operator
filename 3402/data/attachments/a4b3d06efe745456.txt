[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:80 starting continuous writes to the database
[33mWARNING [0m juju.model:model.py:1564 relate is deprecated and will be removed. Use integrate instead.
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-test-app/0 [idle] active: 
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [idle] active: Primary
  postgresql-k8s/2 [idle] active: 
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:84 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:243 Initial writes {'test.postgresql-k8s-1': 183, 'test.postgresql-k8s-2': 184}
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:249 Retry writes {'test.postgresql-k8s-1': 324, 'test.postgresql-k8s-2': 326}
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:87 Get leader unit
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:93 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:93 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:107 Refresh the charm
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:110 Get first upgrading unit
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:123 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:243 Initial writes {'test.postgresql-k8s-0': 16747, 'test.postgresql-k8s-2': 16749}
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:249 Retry writes {'test.postgresql-k8s-0': 16884, 'test.postgresql-k8s-2': 16886}
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:131 Resume upgrade
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:135 Wait for application to upgrade
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [executing] maintenance: stopping charm software
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [executing] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [executing] maintenance: 
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: Primary
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: Primary
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] maintenance: upgrade completed
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: Primary
[32mINFO    [0m juju.model:model.py:2972 Waiting for model:
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: 
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:146 Ensure continuous_writes after upgrade
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:243 Initial writes {'test.postgresql-k8s-1': 30267, 'test.postgresql-k8s-2': 30269}
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:249 Retry writes {'test.postgresql-k8s-1': 30409, 'test.postgresql-k8s-2': 30410}
[32mINFO    [0m integration.ha_tests.test_upgrade_to_primary_label:test_upgrade_to_primary_label.py:151 Checking whether no writes were lost
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1038 HTTP Request: GET https://10.1.0.45:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m pytest_operator.plugin:plugin.py:903 Model status:

Model  Controller          Cloud/Region        Version  SLA          Timestamp
test   microk8s-localhost  microk8s/localhost  3.4.6    unsupported  01:46:19Z

App                  Version  Status  Scale  Charm                Channel      Rev  Address         Exposed  Message
postgresql-k8s       14.13    active      3  postgresql-k8s                      0  10.152.183.54   no       
postgresql-test-app           active      1  postgresql-test-app  latest/edge  305  10.152.183.252  no       received database credentials of the first database

Unit                    Workload  Agent  Address       Ports  Message
postgresql-k8s/0        active    idle   10.1.202.209         
postgresql-k8s/1*       active    idle   10.1.202.208         
postgresql-k8s/2        active    idle   10.1.202.207         Primary
postgresql-test-app/0*  active    idle   10.1.202.200         received database credentials of the first database

[32mINFO    [0m pytest_operator.plugin:plugin.py:909 Juju error logs:

unit-postgresql-k8s-1: 01:38:17 ERROR unit.postgresql-k8s/1.juju-log charms.data_platform_libs.v0.upgrade.ClusterNotReadyError - {'message': 'postgresql-k8s/0 needs to be a synchronous standby in order to become the primary before the upgrade process can start - wait 30 seconds for postgresql-k8s/0 to become a synchronous standby and run this action again', 'cause': 'postgresql-k8s/0 needs to be a synchronous standby in order to become the primary before the upgrade process can start', 'resolution': 'wait 30 seconds for postgresql-k8s/0 to become a synchronous standby and run this action again'}
unit-postgresql-k8s-2: 01:41:33 ERROR unit.postgresql-k8s/2.juju-log failed to change plugins: 
Traceback (most recent call last):
  File "/var/lib/juju/agents/unit-postgresql-k8s-2/charm/lib/charms/postgresql_k8s/v0/postgresql.py", line 354, in enable_disable_extensions
    cursor.execute(
psycopg2.errors.ObjectNotInPrerequisiteState: pgaudit must be loaded via shared_preload_libraries


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/var/lib/juju/agents/unit-postgresql-k8s-2/charm/./src/charm.py", line 723, in _handle_enable_disable_extensions
    self.postgresql.enable_disable_extensions(extensions, database)
  File "/var/lib/juju/agents/unit-postgresql-k8s-2/charm/lib/charms/tempo_coordinator_k8s/v0/charm_tracing.py", line 1064, in wrapped_function
    return callable(*args, **kwargs)  # type: ignore
  File "/var/lib/juju/agents/unit-postgresql-k8s-2/charm/lib/charms/postgresql_k8s/v0/postgresql.py", line 365, in enable_disable_extensions
    raise PostgreSQLEnableDisableExtensionError() from e
charms.postgresql_k8s.v0.postgresql.PostgreSQLEnableDisableExtensionError
unit-postgresql-k8s-1: 01:43:17 ERROR unit.postgresql-k8s/1.juju-log database:4: failed to change plugins: 
Traceback (most recent call last):
  File "/var/lib/juju/agents/unit-postgresql-k8s-1/charm/lib/charms/postgresql_k8s/v0/postgresql.py", line 354, in enable_disable_extensions
    cursor.execute(
psycopg2.errors.ObjectNotInPrerequisiteState: pgaudit must be loaded via shared_preload_libraries


The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/var/lib/juju/agents/unit-postgresql-k8s-1/charm/./src/charm.py", line 723, in _handle_enable_disable_extensions
    self.postgresql.enable_disable_extensions(extensions, database)
  File "/var/lib/juju/agents/unit-postgresql-k8s-1/charm/lib/charms/tempo_coordinator_k8s/v0/charm_tracing.py", line 1064, in wrapped_function
    return callable(*args, **kwargs)  # type: ignore
  File "/var/lib/juju/agents/unit-postgresql-k8s-1/charm/lib/charms/postgresql_k8s/v0/postgresql.py", line 365, in enable_disable_extensions
    raise PostgreSQLEnableDisableExtensionError() from e
charms.postgresql_k8s.v0.postgresql.PostgreSQLEnableDisableExtensionError

[32mINFO    [0m pytest_operator.plugin:plugin.py:991 Forgetting model main...