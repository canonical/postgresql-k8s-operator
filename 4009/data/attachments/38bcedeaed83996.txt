[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:157 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:161 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'testing.postgresql-k8s-0': 152, 'testing.postgresql-k8s-1': 154, 'testing.postgresql-k8s-2': 155}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'testing.postgresql-k8s-0': 251, 'testing.postgresql-k8s-1': 253, 'testing.postgresql-k8s-2': 254}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:164 Get leader unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:170 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:182 Inject dependency fault
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:187 Refresh the charm
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:190 Get first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:194 Wait for upgrade to fail on first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:201 Ensure continuous_writes while in failure state on remaining units
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'testing.postgresql-k8s-0': 2942, 'testing.postgresql-k8s-1': 2943}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'testing.postgresql-k8s-0': 3704, 'testing.postgresql-k8s-1': 3705}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:204 Re-run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:208 Re-refresh the charm
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] blocked: ready to rollback application
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] blocked: ready to rollback application
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:220 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'testing.postgresql-k8s-0': 10529, 'testing.postgresql-k8s-1': 10530, 'testing.postgresql-k8s-2': 10531}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'testing.postgresql-k8s-0': 10625, 'testing.postgresql-k8s-1': 10626, 'testing.postgresql-k8s-2': 10627}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:223 Resume upgrade
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:227 Wait for application to recover
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] blocked: ready to rollback application
  postgresql-k8s/1 [executing] maintenance: stopping charm software
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] blocked: ready to rollback application
  postgresql-k8s/1 [executing] maintenance: upgrading unit
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] blocked: ready to rollback application
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] blocked: ready to rollback application
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [executing] maintenance: 
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [executing] waiting: awaiting for cluster to start
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [executing] maintenance: upgrade completed
  postgresql-k8s/2 [executing] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: 
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:233 Ensure continuous_writes after rollback procedure
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'testing.postgresql-k8s-0': 22567, 'testing.postgresql-k8s-1': 22568, 'testing.postgresql-k8s-2': 22570}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'testing.postgresql-k8s-0': 24076, 'testing.postgresql-k8s-1': 24076, 'testing.postgresql-k8s-2': 24078}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:238 Checking whether no writes were lost
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.64:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m pytest_operator.plugin:plugin.py:937 Model status:

Model    Controller          Cloud/Region        Version  SLA          Timestamp
testing  concierge-microk8s  microk8s/localhost  3.6.5    unsupported  01:58:50Z

App                  Version  Status  Scale  Charm                Channel      Rev  Address        Exposed  Message
postgresql-k8s       14.17    active      3  postgresql-k8s                      2  10.152.183.80  no       
postgresql-test-app           active      1  postgresql-test-app  latest/edge  381  10.152.183.58  no       received database credentials of the first database

Unit                    Workload  Agent  Address      Ports  Message
postgresql-k8s/0*       active    idle   10.1.175.85         
postgresql-k8s/1        active    idle   10.1.175.84         
postgresql-k8s/2        active    idle   10.1.175.83         
postgresql-test-app/0*  active    idle   10.1.175.72         received database credentials of the first database

[32mINFO    [0m pytest_operator.plugin:plugin.py:943 Juju error logs:

unit-postgresql-k8s-2: 01:50:25 ERROR unit.postgresql-k8s/2.juju-log charms.data_platform_libs.v0.upgrade.VersionError - {'message': 'Versions incompatible, charm 2 can not be upgraded to 15.0', 'cause': 'Upgrades only supported for specific versions, charm versions satisfying requirement ^15', 'resolution': ''}

[32mINFO    [0m pytest_operator.plugin:plugin.py:1025 Forgetting model main...