[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:157 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:161 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.84:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.84:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.84:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'testing.postgresql-k8s-0': 144, 'testing.postgresql-k8s-1': 146, 'testing.postgresql-k8s-2': 147}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.84:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.84:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.84:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'testing.postgresql-k8s-0': 243, 'testing.postgresql-k8s-1': 244, 'testing.postgresql-k8s-2': 245}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:164 Get leader unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:170 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:182 Inject dependency fault
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:187 Refresh the charm
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:190 Get first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:194 Wait for upgrade to fail on first upgrading unit
[32mINFO    [0m pytest_operator.plugin:plugin.py:937 Model status:

Model    Controller          Cloud/Region        Version  SLA          Timestamp
testing  concierge-microk8s  microk8s/localhost  3.6.7    unsupported  01:58:38Z

App                  Version  Status  Scale  Charm                Channel      Rev  Address         Exposed  Message
postgresql-k8s       14.18    active      3  postgresql-k8s                      1  10.152.183.183  no       
postgresql-test-app           active      1  postgresql-test-app  latest/edge  383  10.152.183.39   no       received database credentials of the first database

Unit                    Workload  Agent  Address     Ports  Message
postgresql-k8s/0        active    idle   10.1.20.20         Primary
postgresql-k8s/1        active    idle   10.1.20.19         
postgresql-k8s/2*       active    idle   10.1.20.18         
postgresql-test-app/0*  active    idle   10.1.20.8          received database credentials of the first database

[32mINFO    [0m pytest_operator.plugin:plugin.py:943 Juju error logs:

unit-postgresql-k8s-1: 01:33:03 ERROR unit.postgresql-k8s/1.juju-log pgdata folder not found in /var/lib/postgresql/data/pgdata
unit-postgresql-k8s-0: 01:49:32 ERROR unit.postgresql-k8s/0.juju-log Cluster upgrade failed, ensure pre-upgrade checks are ran first.

[32mINFO    [0m pytest_operator.plugin:plugin.py:1025 Forgetting model main...