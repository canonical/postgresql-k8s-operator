{"uid":"4b4757e66a1912dae1a509f688f20b0f","children":[{"name":"Product defects","children":[{"name":"AssertionError: assert 0 == 1\n +  where 0 = <built-in function countOf>(dict_values(['replica', 'replica', 'primary']), 'master')\n +    where <built-in function countOf> = operator.countOf\n +    and   dict_values(['replica', 'replica', 'primary']) = <built-in method values of dict object at 0x7fe20f52c380>()\n +      where <built-in method values of dict object at 0x7fe20f52c380> = {'postgresql-k8s/0': 'replica', 'postgresql-k8s/1': 'replica', 'postgresql-k8s/2': 'primary'}.values","children":[{"name":"test_fail_and_rollback","uid":"458faf257814bbd5","parentUid":"82d95cbfd0e5d0e8db662d9fac6a3476","status":"failed","time":{"start":1730598193723,"stop":1730598753747,"duration":560024},"flaky":false,"newFailed":false,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":true,"parameters":[],"tags":["unstable","asyncio","@pytest.mark.skipif(False, reason='Requires amd64 architecture')","group(1)"]}],"uid":"82d95cbfd0e5d0e8db662d9fac6a3476"},{"name":"AssertionError: Connection is possible after network cut\nassert not True","children":[{"name":"test_network_cut","uid":"807a690ffc40ec5","parentUid":"346c5c288139cd3137904911f29ab1e1","status":"failed","time":{"start":1730599936927,"stop":1730600010537,"duration":73610},"flaky":false,"newFailed":true,"newPassed":false,"newBroken":false,"retriesCount":1,"retriesStatusChange":true,"parameters":[],"tags":["asyncio","abort_on_fail","@pytest.mark.skipif(False, reason='Requires amd64 architecture')","group('ha_tests')"]}],"uid":"346c5c288139cd3137904911f29ab1e1"}],"uid":"8fb3a91ba5aaf9de24cc8a92edc82b5d"}],"name":"categories"}