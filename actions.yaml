# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

create-backup:
  description: Creates a backup to s3 storage in AWS.
  params:
    type:
      type: string
      description: The backup type, the default value is 'full'.
        Full backup is a full copy of all data.
        Differential backup is a copy only of changed data since the last full backup.
        Incremental backup is a copy only of changed data since the last backup (any type).
        Possible values - full, differential, incremental.
create-replication:
  description: Set up asynchronous replication between two clusters.
  params:
    name:
      type: string
      description: The name of the replication (defaults to 'default').
      default: default
force-refresh-start:
  description: |
    Potential of data loss and downtime

    Force refresh of first unit

    Must run with at least one of the parameters `=false`
  params:
    check-compatibility:
      type: boolean
      default: true
      description: |
        Potential of data loss and downtime

        If `false`, force refresh if new version of PostgreSQL and/or charm is not compatible with previous version
    run-pre-refresh-checks:
      type: boolean
      default: true
      description: |
        Potential of data loss and downtime

        If `false`, force refresh if app is unhealthy or not ready to refresh (and unit status shows "Pre-refresh check failed")
    check-workload-container:
      type: boolean
      default: true
      description: |
        Potential of data loss and downtime during and after refresh

        If `false`, allow refresh to PostgreSQL container version that has not been validated to work with the charm revision
  additionalProperties: false
get-primary:
  description: Get the unit with is the primary/leader in the replication.
list-backups:
  description: Lists backups in s3 storage in AWS.
pre-refresh-check:
  description: Check if charm is ready to refresh
  additionalProperties: false
pre-upgrade-check:
  description: Run necessary pre-upgrade checks and preparations before executing a charm refresh.
promote-to-primary:
  description: Promotes the cluster of choice to a primary cluster. Must be ran against the leader unit when promoting a cluster
   or against the unit to be promoted within the cluster.
  params:
    scope:
      type: string
      description: Whether to promote a unit or a cluster. Must be set to either unit or cluster.
    force:
      type: boolean
      description: Force the promotion of a cluster when there is already a primary cluster.
restore:
  description: Restore a database backup using pgBackRest.
    S3 credentials are retrieved from a relation with the S3 integrator charm.
  params:
    backup-id:
      type: string
      description: A backup-id to identify the backup to restore (format = %Y-%m-%dT%H:%M:%SZ)
    restore-to-time:
      type: string
      description: Point-in-time-recovery target in PSQL format.
resume-refresh:
  description: |
    Refresh next unit(s) (after you have manually verified that refreshed units are healthy)

    If the `pause-after-unit-refresh` config is set to `all`, this action will refresh the next unit.

    If `pause-after-unit-refresh` is set to `first`, this action will refresh all remaining units.
    Exception: if automatic health checks fail after a unit has refreshed, the refresh will pause.

    If `pause-after-unit-refresh` is set to `none`, this action will have no effect unless it is called with `check-health-of-refreshed-units` as `false`.
  params:
    check-health-of-refreshed-units:
      type: boolean
      default: true
      description: |
        Potential of data loss and downtime

        If `false`, force refresh (of next unit) if 1 or more refreshed units are unhealthy

        Warning: if first unit to refresh is unhealthy, consider running `force-refresh-start` action on that unit instead of using this parameter.
        If first unit to refresh is unhealthy because compatibility checks, pre-refresh checks, or workload container checks are failing, this parameter is more destructive than the `force-refresh-start` action.
  additionalProperties: false
resume-upgrade:
  description: Resume a rolling upgrade after asserting successful upgrade of a new revision.
