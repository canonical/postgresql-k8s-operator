# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
name: Tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '.jujuignore'
      - 'LICENSE'
      - '**.md'
      - .github/renovate.json5
  schedule:
    - cron: '53 0 * * *' # Daily at 00:53 UTC
  # Triggered on push to branch "main" by .github/workflows/release.yaml
  workflow_call:

jobs:
  lint:
    name: Lint
    uses: canonical/data-platform-workflows/.github/workflows/lint.yaml@v9.3.1

  unit-test:
    name: Unit test charm
    strategy:
      matrix:
        juju-version:
          - "juju2"
          - "juju3"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install tox & poetry
        run: |
          pipx install tox
          pipx install poetry
      - name: Run tests
        run: tox run -e unit-${{ matrix.juju-version }}

  build:
    name: Build charm
    uses: canonical/data-platform-workflows/.github/workflows/build_charms_with_cache.yaml@v9.3.1
    with:
      charmcraft-snap-channel: beta

  integration-test:
    strategy:
      fail-fast: false
      matrix:
        juju:
          - agent: 2.9.46
            libjuju: ^2
          - agent: 3.1.7
    name: Integration test charm | ${{ matrix.juju.agent }}
    needs:
      - lint
      - unit-test
      - build
    uses: canonical/data-platform-workflows/.github/workflows/integration_test_charm.yaml@v9.3.1
    with:
      artifact-name: ${{ needs.build.outputs.artifact-name }}
      cloud: microk8s
      microk8s-snap-channel: 1.29-strict/stable
      juju-agent-version: ${{ matrix.juju.agent }}
      libjuju-version-constraint: ${{ matrix.juju.libjuju }}
    secrets:
      integration-test: |
        {
          "AWS_ACCESS_KEY": "${{ secrets.AWS_ACCESS_KEY }}",
          "AWS_SECRET_KEY": "${{ secrets.AWS_SECRET_KEY }}",
          "GCP_ACCESS_KEY": "${{ secrets.GCP_ACCESS_KEY }}",
          "GCP_SECRET_KEY": "${{ secrets.GCP_SECRET_KEY }}",
        }
