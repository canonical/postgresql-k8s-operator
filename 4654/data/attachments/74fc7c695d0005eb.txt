[32mINFO    [0m integration.ha_tests.test_self_healing_2:test_self_healing_2.py:78 scaling database to zero units
[32mINFO    [0m integration.ha_tests.test_self_healing_2:test_self_healing_2.py:82 scaling database to three units
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s (waiting for exactly 3 units, current : 0)
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [executing] unknown: 
  postgresql-k8s/1 [executing] unknown: 
  postgresql-k8s/2 [idle] waiting: awaiting for cluster to start
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [executing] unknown: 
  postgresql-k8s/1 [executing] unknown: 
  postgresql-k8s/2 [executing] waiting: awaiting for primary endpoint to be ready
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] unknown: 
  postgresql-k8s/1 [idle] unknown: 
  postgresql-k8s/2 [executing] active: Primary (degraded)
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [executing] active: 
  postgresql-k8s/1 [executing] active: 
  postgresql-k8s/2 [executing] active: Primary
[32mINFO    [0m integration.ha_tests.test_self_healing_2:test_self_healing_2.py:86 waiting for the database service to start in all units
[32mINFO    [0m integration.ha_tests.test_self_healing_2:test_self_healing_2.py:92 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'testing.postgresql-k8s-0': 157, 'testing.postgresql-k8s-1': 157, 'testing.postgresql-k8s-2': 157}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'testing.postgresql-k8s-0': 161, 'testing.postgresql-k8s-1': 161, 'testing.postgresql-k8s-2': 161}
[32mINFO    [0m integration.ha_tests.test_self_healing_2:test_self_healing_2.py:96 checking whether all units are part of the same cluster
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.test_self_healing_2:test_self_healing_2.py:105 checking whether no writes to the database were missed after stopping the writes
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.87:16443/api/v1/namespaces/testing/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m pytest_operator.plugin:plugin.py:951 Model status:

Model    Controller          Cloud/Region        Version  SLA          Timestamp
testing  concierge-microk8s  microk8s/localhost  3.6.9    unsupported  01:37:11Z

App                  Version  Status  Scale  Charm                Channel      Rev  Address        Exposed  Message
postgresql-k8s       14.19    active      3  postgresql-k8s                      0  10.152.183.22  no       
postgresql-test-app           active      1  postgresql-test-app  latest/edge  414  10.152.183.95  no       received database credentials of the first database

Unit                    Workload  Agent  Address       Ports  Message
postgresql-k8s/0        active    idle   10.1.113.143         
postgresql-k8s/1        active    idle   10.1.113.145         
postgresql-k8s/2*       active    idle   10.1.113.144         Primary
postgresql-test-app/0*  active    idle   10.1.113.142         received database credentials of the first database

[32mINFO    [0m pytest_operator.plugin:plugin.py:957 Juju error logs:


[32mINFO    [0m pytest_operator.plugin:plugin.py:1039 Forgetting model main...