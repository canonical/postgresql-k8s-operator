# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tool.poetry]
name = "postgresql-k8s"
version = "0.0.1-dev.0"
description = ""
authors = []
license = "Apache-2.0"
readme = "README.md"
homepage = "https://charmhub.io/postgresql-k8s"
repository = "https://github.com/canonical/postgresql-k8s-operator"

[tool.poetry.dependencies]
python = "^3.10.6"
ops = "2.4.1"
pgconnstr = "1.0.1"
tenacity = "8.2.2"
cryptography = "41.0.2"
jsonschema = "4.18.4"
jinja2 = "3.1.2"
lightkube = "0.14.0"
lightkube-models = "1.27.1.4"
requests = "2.31.0"
boto3 = "1.28.7"
# psycopg2 = "^2.9.5" # Injected in charmcraft.yaml
packaging = "23.1"

[tool.poetry.group.format]
optional = true

[tool.poetry.group.format.dependencies]
black = "23.7.0"
isort = "5.12.0"

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.lint.dependencies]
flake8 = "6.0.0"
flake8-docstrings = "1.7.0"
flake8-copyright = "0.2.4"
flake8-builtins = "2.1.0"
pyproject-flake8 = "6.0.0.post1"
pep8-naming = "^0.13.3"
codespell = "2.2.5"

[tool.poetry.group.unit]
optional = true

[tool.poetry.group.unit.dependencies]
coverage = {extras = ["toml"], version = "7.2.7"}
pytest = "7.4.0"
pytest-asyncio = "0.21.1"
psycopg2 = {version = "2.9.6", extras = ["binary"]}

[tool.poetry.group.integration]
optional = true

[tool.poetry.group.integration.dependencies]
lightkube = "0.14.0"
pytest = "7.4.0"
pytest-operator = "0.28.0"
juju = "2.9.44.0 || 3.2.0.1"  # renovate libjuju
psycopg2 = {version = "2.9.6", extras = ["binary"]}

[tool.poetry.group.ha_charm]
optional = true

[tool.poetry.group.ha_charm.dependencies]
ops = "2.4.1"
tenacity = "8.2.2"

[tool.poetry.group.relation_charm]
optional = true

[tool.poetry.group.relation_charm.dependencies]
ops = "2.4.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
markers = ["unstable"]

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

[tool.isort]
profile = "black"

# Linting tools configuration
[tool.flake8]
max-line-length = 99
max-doc-length = 99
max-complexity = 10
exclude = [".git", "__pycache__", ".tox", "build", "dist", "*.egg_info", "venv"]
select = ["E", "W", "F", "C", "N", "R", "D", "H"]
# Ignore W503, E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["W503", "E501", "D107"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = ["tests/*:D100,D101,D102,D103,D104"]
docstring-convention = "google"
# Check for properly formatted copyright header in each file
copyright-check = "True"
copyright-author = "Canonical Ltd."
copyright-regexp = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+%(author)s"
