# Copyright 2021 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, unit

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
lib_path = {toxinidir}/lib/charms/postgresql_k8s
all_path = {[vars]src_path} {[vars]tst_path} {[vars]lib_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=ipdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  HOME
  CHARM_BUILD_DIR
  MODEL_SETTINGS
  PYTEST_SKIP_DEPLOY
deps =
    poetry

[testenv:fmt]
description = Apply coding style standards to code
commands =
    poetry install --only fmt
    poetry run isort {[vars]all_path}
    poetry run black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
commands =
    poetry install --only fmt,lint
    poetry run codespell {toxinidir}/*.yaml {toxinidir}/*.ini {toxinidir}/*.md \
      {toxinidir}/*.toml {toxinidir}/*.txt {toxinidir}/.github
    # pflake8 wrapper supports config from pyproject.toml
    poetry run pflake8 {[vars]all_path}
    poetry run isort --check-only --diff {[vars]all_path}
    poetry run black --check --diff {[vars]all_path}


[testenv:unit]
description = Run unit tests
commands =
    poetry install --with unit
    poetry export -f requirements.txt -o requirements.txt
    poetry run coverage run --source={[vars]src_path} \
        -m pytest --ignore={[vars]tst_path}integration -v --tb native -s {posargs}
    poetry run coverage report

[testenv:charm-integration]
description = Run charm integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0 -m charm_tests

[testenv:database-relation-integration]
description = Run database relation integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry export --only relation_charm -f requirements.txt -o tests/integration/new_relations/application-charm/requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0 -m database_relation_tests

[testenv:db-relation-integration]
description = Run db relation integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0 -m db_relation_tests

[testenv:db-admin-relation-integration]
description = Run db-admin relation integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0 -m db_admin_relation_tests

[testenv:ha-self-healing-integration]
description = Run high availability self healing integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry export --only ha_charm -f requirements.txt -o tests/integration/ha_tests/application-charm/requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0 -m ha_self_healing_tests

[testenv:password-rotation-integration]
description = Run password rotation integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0 -m password_rotation_tests

[testenv:tls-integration]
description = Run TLS integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0 -m tls_tests

[testenv:integration]
description = Run all integration tests
commands =
    poetry install --with integration
    poetry export -f requirements.txt -o requirements.txt
    poetry run pytest -v --tb native --ignore={[vars]tst_path}unit --log-cli-level=INFO -s {posargs} --durations=0

[testenv:poetry-lock]
description = Install, lock and export poetry dependencies
commands =
    poetry lock
    poetry export -f requirements.txt -o requirements.txt
    poetry export --only ha_charm -f requirements.txt -o tests/integration/ha_tests/application-charm/requirements.txt
    poetry export --only relation_charm -f requirements.txt -o tests/integration/new_relations/application-charm/requirements.txt
