[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:165 starting continuous writes to the database
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:169 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'test.postgresql-k8s-1': 156, 'test.postgresql-k8s-2': 157}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'test.postgresql-k8s-1': 292, 'test.postgresql-k8s-2': 293}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:172 Get leader unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:178 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:178 Run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:191 Inject dependency fault
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:196 Refresh the charm
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:199 Get first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:203 Wait for upgrade to fail on first upgrading unit
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:210 Ensure continuous_writes while in failure state on remaining units
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'test.postgresql-k8s-0': 6167, 'test.postgresql-k8s-1': 6168}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'test.postgresql-k8s-0': 7166, 'test.postgresql-k8s-1': 7168}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:213 Re-run pre-upgrade-check action
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:217 Re-refresh the charm
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [executing] waiting: other units upgrading first...
  postgresql-k8s/1 [executing] waiting: other units upgrading first...
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: other units upgrading first...
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:229 checking whether writes are increasing
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'test.postgresql-k8s-0': 22111, 'test.postgresql-k8s-1': 22112}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-0 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'test.postgresql-k8s-0': 22247, 'test.postgresql-k8s-1': 22248}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:232 Resume upgrade
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:236 Wait for application to recover
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [executing] maintenance: stopping charm software
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: other units upgrading first...
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [executing] maintenance: upgrading unit
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] waiting: awaiting for cluster to start
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] maintenance: upgrade completed
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] maintenance: upgrade completed
  postgresql-k8s/1 [idle] maintenance: upgrade completed
  postgresql-k8s/2 [idle] active: 
[32mINFO    [0m juju.model:__init__.py:3254 Waiting for model:
  postgresql-k8s/0 [idle] active: 
  postgresql-k8s/1 [idle] active: 
  postgresql-k8s/2 [idle] active: 
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:242 Ensure continuous_writes after rollback procedure
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:242 Initial writes {'test.postgresql-k8s-1': 40200, 'test.postgresql-k8s-2': 40202}
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m integration.ha_tests.helpers:helpers.py:248 Retry writes {'test.postgresql-k8s-1': 40338, 'test.postgresql-k8s-2': 40340}
[32mINFO    [0m integration.ha_tests.test_upgrade:test_upgrade.py:247 Checking whether no writes were lost
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-1 "HTTP/1.1 200 OK"
[32mINFO    [0m httpx:_client.py:1025 HTTP Request: GET https://10.1.0.200:16443/api/v1/namespaces/test/pods/postgresql-k8s-2 "HTTP/1.1 200 OK"
[32mINFO    [0m pytest_operator.plugin:plugin.py:929 Model status:

Model  Controller          Cloud/Region        Version  SLA          Timestamp
test   microk8s-localhost  microk8s/localhost  3.6.2    unsupported  01:56:16Z

App                  Version  Status  Scale  Charm                Channel      Rev  Address         Exposed  Message
postgresql-k8s       14.15    active      3  postgresql-k8s                      2  10.152.183.129  no       
postgresql-test-app           active      1  postgresql-test-app  latest/edge  352  10.152.183.147  no       received database credentials of the first database

Unit                    Workload  Agent  Address      Ports  Message
postgresql-k8s/0        active    idle   10.1.214.85         
postgresql-k8s/1        active    idle   10.1.214.84         
postgresql-k8s/2*       active    idle   10.1.214.83         
postgresql-test-app/0*  active    idle   10.1.214.72         received database credentials of the first database

[32mINFO    [0m pytest_operator.plugin:plugin.py:935 Juju error logs:

unit-postgresql-k8s-2: 01:36:45 ERROR unit.postgresql-k8s/2.juju-log charms.data_platform_libs.v0.upgrade.ClusterNotReadyError - {'message': 'postgresql-k8s/0 needs to be a synchronous standby in order to become the primary before the upgrade process can start - wait 30 seconds for postgresql-k8s/0 to become a synchronous standby and run this action again', 'cause': 'postgresql-k8s/0 needs to be a synchronous standby in order to become the primary before the upgrade process can start', 'resolution': 'wait 30 seconds for postgresql-k8s/0 to become a synchronous standby and run this action again'}
unit-postgresql-k8s-2: 01:45:48 ERROR unit.postgresql-k8s/2.juju-log charms.data_platform_libs.v0.upgrade.ClusterNotReadyError - {'message': 'postgresql-k8s/0 needs to be a synchronous standby in order to become the primary before the upgrade process can start - wait 30 seconds for postgresql-k8s/0 to become a synchronous standby and run this action again', 'cause': 'postgresql-k8s/0 needs to be a synchronous standby in order to become the primary before the upgrade process can start', 'resolution': 'wait 30 seconds for postgresql-k8s/0 to become a synchronous standby and run this action again'}
unit-postgresql-k8s-2: 01:47:25 ERROR unit.postgresql-k8s/2.juju-log charms.data_platform_libs.v0.upgrade.VersionError - {'message': 'Versions incompatible, charm 2 can not be upgraded to 15.0', 'cause': 'Upgrades only supported for specific versions, charm versions satisfying requirement ^15', 'resolution': ''}

[32mINFO    [0m pytest_operator.plugin:plugin.py:1017 Forgetting model main...